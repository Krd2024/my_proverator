
services:
  db:
    image: postgres:17
    restart: always
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn proverator_project.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120"
    volumes:
      - .:/app
      - static_volume:/proverator_project/staticfiles
      - media_volume:/proverator_project/media
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  celery:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A proverator_project worker --loglevel=INFO
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  celery_beat:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A proverator_project beat --loglevel=INFO
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

volumes:
  pg_data:
  static_volume:
  media_volume:


